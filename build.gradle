/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  ext {
    korkVersion = "5.0.0"
  }
  repositories {
    jcenter()
    maven { url "https://spinnaker.bintray.com/gradle" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker.gradle:spinnaker-dev-plugin:6.0.0'
    if (Boolean.valueOf(enablePublishing)) {
      classpath 'com.netflix.spinnaker.gradle:spinnaker-gradle-project:6.0.0'
    }
  }
}

allprojects {
  group = "com.netflix.spinnaker.fiat"
  apply plugin: 'spinnaker.base-project'
  if (Boolean.valueOf(enablePublishing)) {
    apply plugin: 'spinnaker.project'
  }
  apply plugin: 'java-library'
  apply plugin: 'groovy'

  test {
    testLogging {
      exceptionFormat = 'full'
    }
    minHeapSize = "512m"
    maxHeapSize = "512m"
  }
  tasks.withType(Javadoc) {
    failOnError = false
  }

  tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
      jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=7103'
    }
  }
}

subprojects { project ->
  dependencies {
    implementation platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")
    compileOnly "org.projectlombok:lombok"
    annotationProcessor platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")
    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")
    testAnnotationProcessor "org.projectlombok:lombok"

    implementation "org.springframework.boot:spring-boot-properties-migrator"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.spockframework:spock-core"
    testImplementation "org.spockframework:spock-spring"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.hamcrest:hamcrest-core"
    testRuntimeOnly "cglib:cglib-nodep"
    testRuntimeOnly "org.objenesis:objenesis"
    testImplementation "org.codehaus.groovy:groovy-all"
  }
}

defaultTasks ':fiat-web:run'
