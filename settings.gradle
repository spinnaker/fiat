/*
 * Copyright 2016 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

if (spinnakerGradleVersion.endsWith('-SNAPSHOT')) {
  pluginManagement {
    repositories {
      mavenLocal()
      gradlePluginPortal()
    }
  }
}

['kork'].each { prj ->
  String propName = "${prj}Composite"
  String projectPath = "../$prj"
  if (settings.ext.has(propName) && Boolean.parseBoolean(settings.ext.get(propName) as String)) {
    includeBuild projectPath
  }
}

rootProject.name="fiat"

include 'fiat-api',
        'fiat-bom',
        'fiat-core',
        'fiat-file',
        'fiat-github',
        'fiat-google-groups',
        'fiat-ldap',
        'fiat-roles',
        'fiat-web'

def setBuildFile(project) {
  project.buildFileName = "${project.name}.gradle"
  project.children.each {
    setBuildFile(it)
  }
}

rootProject.children.each {
  setBuildFile(it)
}

// Set as an ext variable so that build scripts can access it
gradle.ext.includedProviderProjects = includeProviders.split(',').collect{ ':fiat-' + it.toLowerCase() }
